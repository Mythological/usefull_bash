
https://www.vpsserver.com/community/tutorials/4065/how-to-setup-wireguard-on-your-ubuntu-20-04-server/

Исправил iptables

HOW TO SETUP WIREGUARD ON YOUR UBUNTU 20.04 SERVER
Step 1: Installing WireGuard

$ sudo apt update
$ sudo apt install wireguard
Step 2: Generating the private key

$ wg genkey | sudo tee /etc/wireguard/private.key
Generating the public key

$ sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key
Step 3: Choosing IPv4 and (or) IPv6 Addresses

You will need to choose a IP range. In this example we will be using the 192.168.0.0 - 192.168.255.255 range.

Step 4: Creating the WireGuard Server Configuration File

Open the following file with your text editor of choice. In this example we will use nano.

$ sudo nano /etc/wireguard/wg0.conf
Write the following.

[Interface]
PrivateKey = serves_generated_private_key
Address = 192.168.1.1/24
ListenPort = 51820
SaveConfig = true
Save the file.

Step 5: Adjusting the server network configuration. To configure forwarding we need to add a line to the /etc/sysctl.conf file.

$ sudo nano /etc/sysctl.conf
Add the following to the bottom of the file.

net.ipv4.ip_forward=1
If you are using IPv6 you can add the following to the bottom of the file.

net.ipv6.conf.all.forwarding=1
To read and load the new values of your current terminal session run the following command.

$ sudo sysctl -p
Output:

net.ipv4.ip.forward = 1
or

net.ipv6.conf.all.forwarding = 1
Depending on your choice of configuration.

Step 6: Configuring the servers firewall.

We need to find our public network interface of the server. We can do that by running the following command.

$ ip route list default
Output

default via XXX.XXX.XXX.XXX dev eth0 onlink
Where eth0 is the interface of our public network

We are going to add this interface to the ip table rule.

Open the config file.

$ sudo nano /etc/wireguard/wg0.conf
At the bottom of the file. Add the following:

PostUp = iptables -A FORWARD -i $SERVER_WG_NIC -j ACCEPT; iptables -t nat -A POSTROUTING -o $SERVER_PUB_NICv4 -j MASQUERADE; iptables -A FORWARD -i $SERVER_PUB_NICv4 -j ACCEPT; iptables -A INPUT -p udp -m udp --dport $SERVER_PORT -j ACCEPT; 
PostDown = iptables -D FORWARD -i $SERVER_WG_NIC -j ACCEPT; iptables -t nat -D POSTROUTING -o $SERVER_PUB_NICv4 -j MASQUERADE; iptables -D FORWARD -i $SERVER_PUB_NICv4 -j ACCEPT; iptables -D INPUT -p udp -m udp --dport $SERVER_PORT -j ACCEPT; 

The PostUp rules will run when the server start the virtual VPN tunnel. The PostDown rules will run when the server stops the virtual VPN tunnel.

The last part of the firewall configuration is to allow the traffic to and from the WireGuard UPD port. The port that we will need to open is 51820. If you have chosen another port make sure to use that one in the following command.

$ sudo ufw allow 51280/udp
After adding the rules we need to disable and re-enable UFW. Now it can load all the changes we made.

$ sudo ufw disable
$ sudo ufw enable
You can check if all the rules where correctly applied by executing the following command.

$ sudo ufw status
Output

To                         Action      From
--                         ------      ----
51820/udp                  ALLOW       Anywhere
OpenSSH                    ALLOW       Anywhere
51820/udp (v6)             ALLOW       Anywhere (v6)
OpenSSH (v6)               ALLOW       Anywhere (v6)
Step 7: Starting the WireGuard Server.

We can enable the WireGuard service to startup at boot.

$ sudo systemctl enable wg-quick@wg0.service
Lets start the service.

$ sudo systemctl start wg-quick@wg0.service
Make sure that the service is active an running. You can check this by running the following command.

$ sudo systemctl status wg-quick@wg0.service


$ sudo wg set wg0 peer YOUR_CLIENTS_PUBLIC_KEY allowed-ips 192.168.1.10

На клиенте

[Interface]
PrivateKey = CLIENT_PRIVATE_KEY
Address = 192.168.1.12/24
DNS = 8.8.8.8, 1.1.1.1

[Peer]
PublicKey = Server_Public_key
AllowedIPs = 0.0.0.0/0
Endpoint = IP_SERVER:51820

